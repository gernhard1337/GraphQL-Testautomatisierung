{:queryType {:name "Query"},
 :mutationType nil,
 :subscriptionType nil,
 :types
 [{:kind "OBJECT",
   :name "Query",
   :description "",
   :fields
   [{:name "character",
     :description "Get a specific character by ID",
     :args
     [{:name "id",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "SCALAR", :name "ID", :ofType nil}},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Character", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "characters",
     :description "Get the list of all characters",
     :args
     [{:name "page",
       :description "",
       :type {:kind "SCALAR", :name "Int", :ofType nil},
       :defaultValue nil}
      {:name "filter",
       :description "",
       :type
       {:kind "INPUT_OBJECT", :name "FilterCharacter", :ofType nil},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Characters", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "charactersByIds",
     :description "Get a list of characters selected by ids",
     :args
     [{:name "ids",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType
        {:kind "LIST",
         :name nil,
         :ofType
         {:kind "NON_NULL",
          :name nil,
          :ofType {:kind "SCALAR", :name "ID", :ofType nil}}}},
       :defaultValue nil}],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Character", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "location",
     :description "Get a specific locations by ID",
     :args
     [{:name "id",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "SCALAR", :name "ID", :ofType nil}},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Location", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "locations",
     :description "Get the list of all locations",
     :args
     [{:name "page",
       :description "",
       :type {:kind "SCALAR", :name "Int", :ofType nil},
       :defaultValue nil}
      {:name "filter",
       :description "",
       :type
       {:kind "INPUT_OBJECT", :name "FilterLocation", :ofType nil},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Locations", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "locationsByIds",
     :description "Get a list of locations selected by ids",
     :args
     [{:name "ids",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType
        {:kind "LIST",
         :name nil,
         :ofType
         {:kind "NON_NULL",
          :name nil,
          :ofType {:kind "SCALAR", :name "ID", :ofType nil}}}},
       :defaultValue nil}],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Location", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "episode",
     :description "Get a specific episode by ID",
     :args
     [{:name "id",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "SCALAR", :name "ID", :ofType nil}},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Episode", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "episodes",
     :description "Get the list of all episodes",
     :args
     [{:name "page",
       :description "",
       :type {:kind "SCALAR", :name "Int", :ofType nil},
       :defaultValue nil}
      {:name "filter",
       :description "",
       :type
       {:kind "INPUT_OBJECT", :name "FilterEpisode", :ofType nil},
       :defaultValue nil}],
     :type {:kind "OBJECT", :name "Episodes", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "episodesByIds",
     :description "Get a list of episodes selected by ids",
     :args
     [{:name "ids",
       :description "",
       :type
       {:kind "NON_NULL",
        :name nil,
        :ofType
        {:kind "LIST",
         :name nil,
         :ofType
         {:kind "NON_NULL",
          :name nil,
          :ofType {:kind "SCALAR", :name "ID", :ofType nil}}}},
       :defaultValue nil}],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Episode", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "SCALAR",
   :name "ID",
   :description
   "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Character",
   :description "",
   :fields
   [{:name "id",
     :description "The id of the character.",
     :args [],
     :type {:kind "SCALAR", :name "ID", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "name",
     :description "The name of the character.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "status",
     :description
     "The status of the character ('Alive', 'Dead' or 'unknown').",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "species",
     :description "The species of the character.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "type",
     :description "The type or subspecies of the character.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "gender",
     :description
     "The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "origin",
     :description "The character's origin location",
     :args [],
     :type {:kind "OBJECT", :name "Location", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "location",
     :description "The character's last known location",
     :args [],
     :type {:kind "OBJECT", :name "Location", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "image",
     :description
     "Link to the character's image.\nAll images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "episode",
     :description "Episodes in which this character appeared.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType {:kind "OBJECT", :name "Episode", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "created",
     :description
     "Time at which the character was created in the database.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "SCALAR",
   :name "String",
   :description
   "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Location",
   :description "",
   :fields
   [{:name "id",
     :description "The id of the location.",
     :args [],
     :type {:kind "SCALAR", :name "ID", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "name",
     :description "The name of the location.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "type",
     :description "The type of the location.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "dimension",
     :description "The dimension in which the location is located.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "residents",
     :description
     "List of characters who have been last seen in the location.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType {:kind "OBJECT", :name "Character", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "created",
     :description
     "Time at which the location was created in the database.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Episode",
   :description "",
   :fields
   [{:name "id",
     :description "The id of the episode.",
     :args [],
     :type {:kind "SCALAR", :name "ID", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "name",
     :description "The name of the episode.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "air_date",
     :description "The air date of the episode.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "episode",
     :description "The code of the episode.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "characters",
     :description
     "List of characters who have been seen in the episode.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType {:kind "OBJECT", :name "Character", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "created",
     :description
     "Time at which the episode was created in the database.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "SCALAR",
   :name "Int",
   :description
   "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "INPUT_OBJECT",
   :name "FilterCharacter",
   :description "",
   :fields nil,
   :inputFields
   [{:name "name",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "status",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "species",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "type",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "gender",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}],
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Characters",
   :description "",
   :fields
   [{:name "info",
     :description "",
     :args [],
     :type {:kind "OBJECT", :name "Info", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "results",
     :description "",
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Character", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Info",
   :description "",
   :fields
   [{:name "count",
     :description "The length of the response.",
     :args [],
     :type {:kind "SCALAR", :name "Int", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "pages",
     :description "The amount of pages.",
     :args [],
     :type {:kind "SCALAR", :name "Int", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "next",
     :description "Number of the next page (if it exists)",
     :args [],
     :type {:kind "SCALAR", :name "Int", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "prev",
     :description "Number of the previous page (if it exists)",
     :args [],
     :type {:kind "SCALAR", :name "Int", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "INPUT_OBJECT",
   :name "FilterLocation",
   :description "",
   :fields nil,
   :inputFields
   [{:name "name",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "type",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "dimension",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}],
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Locations",
   :description "",
   :fields
   [{:name "info",
     :description "",
     :args [],
     :type {:kind "OBJECT", :name "Info", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "results",
     :description "",
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Location", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "INPUT_OBJECT",
   :name "FilterEpisode",
   :description "",
   :fields nil,
   :inputFields
   [{:name "name",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}
    {:name "episode",
     :description "",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue nil}],
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "Episodes",
   :description "",
   :fields
   [{:name "info",
     :description "",
     :args [],
     :type {:kind "OBJECT", :name "Info", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "results",
     :description "",
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType {:kind "OBJECT", :name "Episode", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__Schema",
   :description
   "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
   :fields
   [{:name "types",
     :description "A list of all types supported by this server.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "OBJECT", :name "__Type", :ofType nil}}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "queryType",
     :description "The type that query operations will be rooted at.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "OBJECT", :name "__Type", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "mutationType",
     :description
     "If this server supports mutation, the type that mutation operations will be rooted at.",
     :args [],
     :type {:kind "OBJECT", :name "__Type", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "subscriptionType",
     :description
     "If this server support subscription, the type that subscription operations will be rooted at.",
     :args [],
     :type {:kind "OBJECT", :name "__Type", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "directives",
     :description "A list of all directives supported by this server.",
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "OBJECT", :name "__Directive", :ofType nil}}}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__Type",
   :description
   "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
   :fields
   [{:name "kind",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "ENUM", :name "__TypeKind", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "name",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "description",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "fields",
     :description nil,
     :args
     [{:name "includeDeprecated",
       :description nil,
       :type {:kind "SCALAR", :name "Boolean", :ofType nil},
       :defaultValue "false"}],
     :type
     {:kind "LIST",
      :name nil,
      :ofType
      {:kind "NON_NULL",
       :name nil,
       :ofType {:kind "OBJECT", :name "__Field", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "interfaces",
     :description nil,
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType
      {:kind "NON_NULL",
       :name nil,
       :ofType {:kind "OBJECT", :name "__Type", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "possibleTypes",
     :description nil,
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType
      {:kind "NON_NULL",
       :name nil,
       :ofType {:kind "OBJECT", :name "__Type", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "enumValues",
     :description nil,
     :args
     [{:name "includeDeprecated",
       :description nil,
       :type {:kind "SCALAR", :name "Boolean", :ofType nil},
       :defaultValue "false"}],
     :type
     {:kind "LIST",
      :name nil,
      :ofType
      {:kind "NON_NULL",
       :name nil,
       :ofType {:kind "OBJECT", :name "__EnumValue", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "inputFields",
     :description nil,
     :args [],
     :type
     {:kind "LIST",
      :name nil,
      :ofType
      {:kind "NON_NULL",
       :name nil,
       :ofType {:kind "OBJECT", :name "__InputValue", :ofType nil}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "ofType",
     :description nil,
     :args [],
     :type {:kind "OBJECT", :name "__Type", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "ENUM",
   :name "__TypeKind",
   :description
   "An enum describing what kind of type a given `__Type` is.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues
   [{:name "SCALAR",
     :description "Indicates this type is a scalar.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "OBJECT",
     :description
     "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INTERFACE",
     :description
     "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "UNION",
     :description
     "Indicates this type is a union. `possibleTypes` is a valid field.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "ENUM",
     :description
     "Indicates this type is an enum. `enumValues` is a valid field.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INPUT_OBJECT",
     :description
     "Indicates this type is an input object. `inputFields` is a valid field.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "LIST",
     :description
     "Indicates this type is a list. `ofType` is a valid field.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "NON_NULL",
     :description
     "Indicates this type is a non-null. `ofType` is a valid field.",
     :isDeprecated false,
     :deprecationReason nil}],
   :possibleTypes nil}
  {:kind "SCALAR",
   :name "Boolean",
   :description
   "The `Boolean` scalar type represents `true` or `false`.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__Field",
   :description
   "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
   :fields
   [{:name "name",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "String", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "description",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "args",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "OBJECT", :name "__InputValue", :ofType nil}}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "type",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "OBJECT", :name "__Type", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "isDeprecated",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "Boolean", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "deprecationReason",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__InputValue",
   :description
   "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
   :fields
   [{:name "name",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "String", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "description",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "type",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "OBJECT", :name "__Type", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "defaultValue",
     :description
     "A GraphQL-formatted string representing the default value for this input value.",
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__EnumValue",
   :description
   "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
   :fields
   [{:name "name",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "String", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "description",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "isDeprecated",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "Boolean", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "deprecationReason",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "OBJECT",
   :name "__Directive",
   :description
   "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
   :fields
   [{:name "name",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "String", :ofType nil}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "description",
     :description nil,
     :args [],
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "locations",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType
       {:kind "NON_NULL",
        :name nil,
        :ofType
        {:kind "ENUM", :name "__DirectiveLocation", :ofType nil}}}},
     :isDeprecated false,
     :deprecationReason nil}
    {:name "args",
     :description nil,
     :args [],
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType
      {:kind "LIST",
       :name nil,
       :ofType
       {:kind "NON_NULL",
        :name nil,
        :ofType {:kind "OBJECT", :name "__InputValue", :ofType nil}}}},
     :isDeprecated false,
     :deprecationReason nil}],
   :inputFields nil,
   :interfaces [],
   :enumValues nil,
   :possibleTypes nil}
  {:kind "ENUM",
   :name "__DirectiveLocation",
   :description
   "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues
   [{:name "QUERY",
     :description "Location adjacent to a query operation.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "MUTATION",
     :description "Location adjacent to a mutation operation.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "SUBSCRIPTION",
     :description "Location adjacent to a subscription operation.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "FIELD",
     :description "Location adjacent to a field.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "FRAGMENT_DEFINITION",
     :description "Location adjacent to a fragment definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "FRAGMENT_SPREAD",
     :description "Location adjacent to a fragment spread.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INLINE_FRAGMENT",
     :description "Location adjacent to an inline fragment.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "VARIABLE_DEFINITION",
     :description "Location adjacent to a variable definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "SCHEMA",
     :description "Location adjacent to a schema definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "SCALAR",
     :description "Location adjacent to a scalar definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "OBJECT",
     :description "Location adjacent to an object type definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "FIELD_DEFINITION",
     :description "Location adjacent to a field definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "ARGUMENT_DEFINITION",
     :description "Location adjacent to an argument definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INTERFACE",
     :description "Location adjacent to an interface definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "UNION",
     :description "Location adjacent to a union definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "ENUM",
     :description "Location adjacent to an enum definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "ENUM_VALUE",
     :description "Location adjacent to an enum value definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INPUT_OBJECT",
     :description
     "Location adjacent to an input object type definition.",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "INPUT_FIELD_DEFINITION",
     :description
     "Location adjacent to an input object field definition.",
     :isDeprecated false,
     :deprecationReason nil}],
   :possibleTypes nil}
  {:kind "ENUM",
   :name "CacheControlScope",
   :description "",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues
   [{:name "PUBLIC",
     :description "",
     :isDeprecated false,
     :deprecationReason nil}
    {:name "PRIVATE",
     :description "",
     :isDeprecated false,
     :deprecationReason nil}],
   :possibleTypes nil}
  {:kind "SCALAR",
   :name "Upload",
   :description "The `Upload` scalar type represents a file upload.",
   :fields nil,
   :inputFields nil,
   :interfaces nil,
   :enumValues nil,
   :possibleTypes nil}],
 :directives
 [{:name "cacheControl",
   :description "",
   :locations ["FIELD_DEFINITION" "OBJECT" "INTERFACE"],
   :args
   [{:name "maxAge",
     :description "",
     :type {:kind "SCALAR", :name "Int", :ofType nil},
     :defaultValue nil}
    {:name "scope",
     :description "",
     :type {:kind "ENUM", :name "CacheControlScope", :ofType nil},
     :defaultValue nil}]}
  {:name "skip",
   :description
   "Directs the executor to skip this field or fragment when the `if` argument is true.",
   :locations ["FIELD" "FRAGMENT_SPREAD" "INLINE_FRAGMENT"],
   :args
   [{:name "if",
     :description "Skipped when true.",
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "Boolean", :ofType nil}},
     :defaultValue nil}]}
  {:name "include",
   :description
   "Directs the executor to include this field or fragment only when the `if` argument is true.",
   :locations ["FIELD" "FRAGMENT_SPREAD" "INLINE_FRAGMENT"],
   :args
   [{:name "if",
     :description "Included when true.",
     :type
     {:kind "NON_NULL",
      :name nil,
      :ofType {:kind "SCALAR", :name "Boolean", :ofType nil}},
     :defaultValue nil}]}
  {:name "deprecated",
   :description
   "Marks an element of a GraphQL schema as no longer supported.",
   :locations ["FIELD_DEFINITION" "ENUM_VALUE"],
   :args
   [{:name "reason",
     :description
     "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
     :type {:kind "SCALAR", :name "String", :ofType nil},
     :defaultValue "\"No longer supported\""}]}]}
